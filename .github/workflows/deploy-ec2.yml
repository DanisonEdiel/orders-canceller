name: Deploy to EC2

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
    
    - name: Set up JDK 21
      uses: actions/setup-java@v4
      with:
        java-version: '21'
        distribution: 'temurin'
        
    - name: Make gradlew executable
      run: chmod +x ./gradlew
        
    - name: Build with Gradle
      run: ./gradlew build -x test
      
    - name: Login to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
        
    - name: Build and Push Docker image
      uses: docker/build-push-action@v5
      with:
        context: .
        push: true
        tags: ${{ secrets.DOCKERHUB_USERNAME }}/orders-canceler:latest
        
    - name: Deploy to EC2
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.EC2_HOST }}
        username: ${{ secrets.EC2_USERNAME }}
        key: ${{ secrets.EC2_SSH_KEY }}
        script: |
          # Create directory if it doesn't exist
          mkdir -p ~/orders-canceler
          
          # Create .env file with environment variables
          cat > ~/orders-canceler/.env << EOF
          SPRING_DATASOURCE_URL=${{ secrets.DB_URL }}
          SPRING_DATASOURCE_USERNAME=${{ secrets.DB_USERNAME }}
          SPRING_DATASOURCE_PASSWORD=${{ secrets.DB_PASSWORD }}
          SPRING_PROFILES_ACTIVE=production
          SERVER_PORT=8080
          EOF
          
          # Create or update docker-compose.yml
          cat > ~/orders-canceler/docker-compose.yml << EOF
          version: '3'
          services:
            orders-canceler:
              image: ${{ secrets.DOCKERHUB_USERNAME }}/orders-canceler:latest
              ports:
                - "8080:8080"
              env_file:
                - .env
              restart: always
          EOF
          
          # Install docker-compose if not installed
          if ! command -v docker-compose &> /dev/null; then
            sudo curl -L "https://github.com/docker/compose/releases/download/v2.20.3/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
            sudo chmod +x /usr/local/bin/docker-compose
          fi
          
          # Pull the latest image and restart the container
          cd ~/orders-canceler
          sudo docker-compose pull
          sudo docker-compose up -d
